<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Contract Repository</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=Windows-1252">

</head>

<BODY>
<P><FONT face=Verdana size=2>Contract Repository is the repository that holds a 
series of contracts. As we mentioned before, a contract is defined by a option 
contract class in ACF. So the contract repository will hold a series of contract 
classes that derive from the <FONT face=Courier 
color=#800000>OptionContractBase</FONT> class and have the specific signature. 
</FONT></P>
<P><FONT face=Verdana size=2>From a developer's point of view, a contract 
repository is a .NET assembly that holds the contract classes. ACF allows you to 
add multiple repositories (assemblies)&nbsp;for a console application simply by 
using the application configuration, which means, you can customize the command 
line syntax without any change of the source code. What you want to do is: 
configure!</FONT></P>
<P align=center><IMG alt="" src="images/contract_repository.png"></P>
<P><FONT face=Verdana size=2>As we can see in the figure above, a console 
application holds the reference to the contract repository, which is defined in 
the application configuration file. We can add or remove the contract 
repositories in the configuration, this will add or remove a series of contracts 
in the application. </FONT></P>
<P><FONT face=Verdana size=2>Suppose we have already deployed a console 
application to our customers, several weeks later we want to provide another 
functionailty (command line syntax) to the console application. What we want to 
do is, create a new contract repository (.NET assembly), add the option contract 
class into the repository, compile, and then make a little change to the 
configuration file, you will find that your console application now 
supports&nbsp;new command line syntaxes, cool!</FONT></P></BODY>
</html>
